#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        enc_vol: enc_vol {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENC_VOL";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        l_hrm: left-home-row-mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Left key with modifier";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59>;
            flavor = "balanced";
        };

        r_hrm: right-home-row-mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Right key with modifier";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54>;
            flavor = "balanced";
        };

        l_tkl: left-thumb-key-layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Left thumb key layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59>;
            flavor = "balanced";
        };

        r_tkl: right-thumb-key-layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Right thumb key layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54>;
            flavor = "balanced";
        };

        en_capsw: en_capsw {
            compatible = "zmk,behavior-caps-word";
            label = "EN_CAPSW";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE BACKSPACE>;
        };

        ru_capsw: ru_capsw {
            compatible = "zmk,behavior-caps-word";
            label = "RU_CAPSW";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE BACKSPACE DOT COMMA SEMICOLON SINGLE_QUOTE GRAVE LEFT_BRACKET RIGHT_BRACKET>;
        };

        l_tlkr: l_tlkr {
            compatible = "zmk,behavior-hold-tap";
            label = "L_TLKR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 55 56 57 58 59>;
            flavor = "balanced";
            retro-tap;
        };

        r_tlkr: r_tlkr {
            compatible = "zmk,behavior-hold-tap";
            label = "R_TLKR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54>;
            flavor = "balanced";
            retro-tap;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <15 16>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <15 16>;
            layers = <0>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <1>;
            tap-ms = <100>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <100>;
            wait-ms = <1>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        sel_word: sel_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT) &kp LS(LC(RIGHT))>;
            label = "SEL_WORD";
        };

        ru: ru {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_ru>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_en>;

            label = "RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp F1  &kp F2        &kp F3           &kp F4     &kp F5                                               &kp F6              &kp F7         &kp F8           &kp F9     &kp F10   &kp F11
&kp TAB    &kp Q   &kp W         &kp E            &kp R      &kp T                                                &kp Y               &kp U          &kp I            &kp O      &kp P     &kp BSLH
&en_capsw  &kp A   &kp S         &l_hrm LSHIFT D  &kp F      &kp G                                                &kp H               &kp J          &r_hrm RSHIFT K  &kp L      &kp SEMI  &kp SQT
&kp LGUI   &kp Z   &kp X         &kp C            &kp V      &kp B            &to_en             &layer_ru        &kp N               &kp M          &kp COMMA        &kp DOT    &kp FSLH  &kp K_APP
                   &kp LEFT_ALT  &kp LBKT         &kp LCTRL  &l_tkl 7 DELETE  &l_tlkr 4 SPACE    &r_tlkr 4 SPACE  &r_tkl 3 BACKSPACE  &kp LS(RCTRL)  &kp RBKT         &kp GRAVE
            >;

            display-name = "Base";
            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp ESC    &kp F1                   &kp F2                &kp F3                        &kp F4              &kp F5                                                  &kp F6              &kp F7                     &kp F8                        &kp F9                 &kp F10              &kp F11
&kp TAB    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U             &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                                      &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE        &kp RU_CYRILLIC_SHA           &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp BSLH
&ru_capsw  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &l_hrm LSHIFT RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                                      &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O          &r_hrm RSHIFT RU_CYRILLIC_EL  &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LGUI   &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES            &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I   &layer_en          &to_ru           &kp RU_CYRILLIC_TE  &kp RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE            &kp RU_CYRILLIC_YU     &kp RU_DOT           &kp K_APP
                                    &kp LALT              &kp RU_CYRILLIC_HA            &kp LCTRL           &l_tkl 7 DELETE     &l_tlkr 5 SPACE    &r_tlkr 5 SPACE  &r_tkl 3 BSPC       &kp LS(RCTRL)              &kp RU_CYRILLIC_HARD_SIGN     &kp RU_CYRILLIC_IO
            >;

            sensor-bindings =
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>,
                <&enc_vol>;
        };

        nav {
            display-name = "Navigation";
            bindings = <
&kp ESC  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                                   &kp F6         &kp F7        &kp F8    &kp F9         &kp F10       &kp F11
&kp TAB  &kp LC(Y)  &sel_word  &none      &none      &none                                    &kp PG_UP      &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp LC(HOME)  &none
&tog 2   &kp LC(A)  &kp LC(S)  &kp LSHFT  &none      &none                                    &none          &kp LEFT      &kp DOWN  &kp RIGHT      &none         &none
&none    &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none            &none        &none      &kp PG_DN      &kp HOME      &none     &kp END        &kp LC(END)   &none
                    &none      &none      &none      &l_tkl 8 DELETE  &kp SPACE    &kp ENTER  &r_tkl 8 BSPC  &none         &none     &none
            >;

            label = "Navigation";
        };

        nav_m {
            bindings = <
&trans  &none      &none      &none      &none      &none                                    &kp N6     &kp N7        &kp N8    &kp N9         &kp N0        &trans
&trans  &kp LC(Y)  &sel_word  &none      &none      &none                                    &kp PG_UP  &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp LC(HOME)  &none
&tog 2  &kp LC(A)  &kp LC(S)  &kp LSHFT  &none      &none                                    &none      &kp LEFT      &kp DOWN  &kp RIGHT      &none         &none
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none            &none        &none      &kp PG_DN  &kp HOME      &none     &kp END        &kp LC(END)   &trans
                   &none      &none      &none      &l_tkl 9 DELETE  &kp SPACE    &kp ENTER  &none      &none         &none     &none
            >;

            display-name = "Navigation";
            label = "Navigation (momentary)";
        };

        sym_en {
            bindings = <
&trans  &trans     &trans            &trans     &trans    &trans                             &trans         &trans    &trans          &trans    &trans     &trans
&trans  &kp TILDE  &kp LT            &kp PLUS   &kp GT    &kp CARET                          &kp EXCL       &kp LBRC  &kp EQUAL       &kp RBRC  &kp COLON  &kp PIPE
&trans  &kp GRAVE  &kp LEFT_BRACKET  &kp MINUS  &kp RBKT  &kp ASTRK                          &kp QUESTION   &kp LPAR  &kp UNDERSCORE  &kp RPAR  &kp SEMI   &kp DOUBLE_QUOTES
&trans  &kp HASH   &kp PERCENT       &kp AT     &kp AMPS  &kp DLLR   &trans       &trans     &ru RU_NUMERO  &kp BSLH  &kp COMMA       &kp DOT   &kp SLASH  &trans
                   &trans            &trans     &trans    &kp DEL    &kp SPACE    &kp ENTER  &kp BSPC       &trans    &trans          &trans
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans  &trans     &trans       &trans     &trans    &trans                             &trans         &trans       &trans        &trans      &trans        &trans
&trans  &en TILDE  &en LT       &kp PLUS   &en GT    &en CARET                          &kp EXCL       &en LBRC     &kp EQUAL     &en RBRC    &kp RU_COLON  &en PIPE
&trans  &en GRAVE  &en LBKT     &kp MINUS  &en RBKT  &kp ASTRK                          &kp RU_QMARK   &kp LPAR     &kp UNDER     &kp RPAR    &kp RU_SEMI   &kp RU_DOUBLE_QUOTES
&trans  &en HASH   &kp PERCENT  &en AT     &en AMPS  &en DLLR   &trans       &trans     &kp RU_NUMERO  &kp RU_BSLH  &kp RU_COMMA  &kp RU_DOT  &kp RU_SLASH  &trans
                   &trans       &trans     &trans    &kp DEL    &kp SPACE    &kp ENTER  &kp BSPC       &trans       &trans        &trans
            >;
        };

        num {
            display-name = "Navigation";
            bindings = <
&none   &none  &none  &none  &none  &none                                 &none          &none   &none   &none   &none            &none
&none   &none  &none  &none  &none  &none                                 &kp KP_MINUS   &kp N7  &kp N8  &kp N9  &kp KP_DIVIDE    &kp KP_CLEAR
&tog 6  &none  &none  &none  &none  &none                                 &kp KP_PLUS    &kp N4  &kp N5  &kp N6  &kp KP_MULTIPLY  &kp KP_EQUAL
&none   &none  &none  &none  &none  &none         &none        &none      &kp LPAR       &kp N1  &kp N2  &kp N3  &kp RPAR         &none
               &none  &none  &none  &l_tkl 8 DEL  &kp SPACE    &kp ENTER  &r_tkl 8 BSPC  &none   &kp N0  &none
            >;

            label = "Number";
        };

        num_m {
            label = "Number (momentary)";
            display-name = "Navigation";
            bindings = <
&none   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                          &none          &none   &none   &none   &none            &none
&none   &none   &none   &none   &none   &none                           &kp KP_MINUS   &kp N7  &kp N8  &kp N9  &kp KP_DIVIDE    &kp KP_CLEAR
&tog 6  &none   &none   &none   &none   &none                           &kp KP_PLUS    &kp N4  &kp N5  &kp N6  &kp KP_MULTIPLY  &kp KP_EQUAL
&none   &none   &none   &none   &none   &none   &none    &none          &kp LPAR       &kp N1  &kp N2  &kp N3  &kp RPAR         &none
                &none   &none   &none   &none   &none    &kp LS(ENTER)  &r_tkl 9 BSPC  &none   &kp N0  &none
            >;
        };

        adj_jmp {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &mo 9   &trans    &trans  &mo 9   &trans  &trans  &trans
            >;

            label = "Jump to adjust";
        };

        adj_m {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans       &trans  &trans  &trans  &trans  &trans                    &trans        &trans        &trans            &trans        &trans        &studio_unlock
&trans       &trans  &trans  &trans  &trans  &trans                    &out OUT_BLE  &kp C_VOL_DN  &kp C_MUTE        &kp C_VOL_UP  &trans        &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                     &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &trans
            >;

            display-name = "Adjust";
        };
    };
};
